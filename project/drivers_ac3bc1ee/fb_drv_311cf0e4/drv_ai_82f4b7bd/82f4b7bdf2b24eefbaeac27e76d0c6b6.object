{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)82f4b7bd-f2b2-4eef-baea-c27e76d0c6b6","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)drv_AI","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)311cf0e4-1406-4bce-b577-8e3b742501ef"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//ANALOG INPUT\n//control of typical analog sensors\n// - pressure\n// - level\n// - flowmeter\n// - etc\n\n//global commands\n\t//auto mode\n\t\tIF sys.All_Auto THEN\n\t\t\tCMD.plc.Manual := FALSE;\n\t\tEND_IF;\n\t//global reset\n\t\tIF sys.All_Reset THEN\n\t\t\tCMD.plc.Reset := TRUE;\n\t\tEND_IF\n\t\t\n//convert data\n\t//input scaling\n\tdrv_Scale(\n\t\tValue := Signal,\n\t\tInput_Type := cfg.Input_Type,\n\t\tRange := cfg.Range,\n\t\tResult => state.Signal);\n\t\t\n//NC control\n\tIF cfg.Input_Type = 1 AND state.Signal < 2.5 AND cfg.cfg.plc.use_SC AND CMD.plc.Start_A THEN\n\t\tstate.alarm.plc.alm_NC := TRUE;\n\tEND_IF\n\t\n//SC control\nIF cfg.cfg.plc.use_SC AND CMD.plc.Start_A  THEN\n\tCASE cfg.Input_Type OF \n\t\t0: \tIF state.Signal > 21.0 AND cfg.cfg.plc.use_SC THEN\t\t\t//0..20 mA\n\t\t\t\tstate.alarm.plc.alm_SC := TRUE;\n\t\t\tEND_IF\n\t\t1: \tIF state.Signal > 21.0 AND cfg.cfg.plc.use_SC THEN\t\t\t//4..20 mA\n\t\t\t\tstate.alarm.plc.alm_SC := TRUE;\n\t\t\tEND_IF\n\t\t2: \tIF state.Signal > 10.5 AND cfg.cfg.plc.use_SC THEN\t\t\t//0..10 V\n\t\t\t\tstate.alarm.plc.alm_SC := TRUE;\n\t\t\tEND_IF\n\t\t3: \tIF state.Signal > 155.0 AND cfg.cfg.plc.use_SC THEN\t\t\t//-150..+150 C\n\t\t\t\tstate.alarm.plc.alm_SC := TRUE;\n\t\t\tEND_IF\n\t\t4: \tIF state.Signal > 255.0 AND cfg.cfg.plc.use_SC THEN\t\t\t//-150..+250 C\n\t\t\t\tstate.alarm.plc.alm_SC := TRUE;\n\t\t\tEND_IF\n\tEND_CASE\nend_if\n\t\n//device control\n// \tdrv_CMD(Emergency := support.0,\n// \t\t\tCMD := CMD);\n\t//manual mode flag\n\t\tIF CMD.plc.Manual THEN sys.man.plc.xAI := TRUE; END_IF;\n\t\t\n//data convert to phisycal value scale\n\tdrv_Converter(\n\t\tSignal := Signal,\n\t\tRange := cfg.Range,\n\t\tResult => Value);\n\t\t\n//signal's filter\n\tFilter(\n\t\tStart := CMD.plc.Start_A AND cfg.cfg.plc.use_Filter,\n\t\tSignal := Value,\n\t\tFilter_Type := cfg.Filter_Type,\n\t\tFilter_Lim := cfg.Filter_Lim,\n\t\tResult => Result);\n\t\t\n//no filtering mode\n\tIF NOT cfg.cfg.plc.use_Filter THEN\n\t\tResult := Value;\n\tEND_IF\n\t\n//signal's correction\n\tIF NOT CMD.plc.Start_A THEN\n\t\tResult := 0;\n\tELSE\n\t\tResult := Result * cfg.Multiplier + cfg.Calibration;\n\tEND_IF\n\t\n//state signal transfer\n\tstate.Result := Result;\n\n//alarms without time control\n\t//ST\n\t\tIF state.alarm.plc.alm_NC OR state.alarm.plc.alm_SC AND cfg.cfg.plc.use_SC AND CMD.plc.Start_A THEN\n\t\t\tstate.alarm.plc.alm_ST := TRUE;\n\t\tEND_IF\n\t\n//alarms with time control\n\t//HH\n\t\tdrv_Alarm(\n\t\t\tSignal := (Result > cfg.SP.HH AND cfg.cfg.plc.use_High),\n\t\t\tReset := (CMD.plc.Reset OR NOT CMD.plc.Start_A),\n\t\t\tClock := Clock[0].CMD,\n\t\t\tAlarm := alm[0]);\n\t\tstate.alarm.plc.alm_HH := alm[0];\n\t//H\n\t\tdrv_Alarm(\n\t\t\tSignal := (Result > cfg.SP.H),\n\t\t\tReset := (CMD.plc.Reset OR NOT CMD.plc.Start_A OR (Result < cfg.SP.H)),\n\t\t\tClock := Clock[1].CMD,\n\t\t\tAlarm := alm[1]);\n\t\tstate.alarm.plc.alm_H := alm[1];\n\t//L\n\t\tdrv_Alarm(\n\t\t\tSignal := (Result < cfg.SP.L),\n\t\t\tReset := (CMD.plc.Reset OR NOT CMD.plc.Start_A OR (Result > cfg.SP.L)),\n\t\t\tClock := Clock[2].CMD,\n\t\t\tAlarm := alm[2]);\n\t\tstate.alarm.plc.alm_L := alm[2];\n\t//LL\n\t\tdrv_Alarm(\n\t\t\tSignal := (Result < cfg.SP.LL AND cfg.cfg.plc.use_Low),\n\t\t\tReset := (CMD.plc.Reset OR NOT CMD.plc.Start_A),\n\t\t\tClock := Clock[3].CMD,\n\t\t\tAlarm := alm[3]);\n\t\tstate.alarm.plc.alm_LL := alm[3];\n\n//global alarm\n\tIF (state.alarm.plc.alm_ST OR state.alarm.plc.alm_HH OR state.alarm.plc.alm_LL) AND CMD.plc.Start_A THEN\n\t\tstate.state.plc.Alarm := TRUE;\n\t\tsys.alm.plc.xAI := TRUE;\n\t\tCMD.plc.Alarm := TRUE;\n\tEND_IF\n\t\n//reset\n\tIF CMD.plc.Reset THEN\n\t\tstate.alarm.hmi := 0;\n\t\tFOR cnt := 0 TO 3 DO\n\t\t\tClock[cnt].CMD.plc.Reset := TRUE;\n\t\tEND_FOR\n\t\tstate.alarm.plc.alm_HH := FALSE;\n\t\tstate.alarm.plc.alm_LL := FALSE;\n\t\tstate.alarm.plc.alm_SC := FALSE;\n\t\tstate.alarm.plc.alm_ST := FALSE;\n\t\tstate.state.plc.Alarm := FALSE;\n\t\tCMD.plc.Alarm := FALSE;\n\t\tCMD.plc.Reset := FALSE;\n\tEND_IF\n\t\n//global state\n\tIF CMD.plc.Start_A THEN\n\t\tstate.state.plc.xON := TRUE;\n\t\tstate.state.plc.xOFF := FALSE;\n\tELSE\n\t\tstate.state.plc.xON := FALSE;\n\t\tstate.state.plc.xOFF := TRUE;\n\tEND_IF\n\t\n//HMI light\n\tIF cfg.cfg.plc.use_Light THEN\n\t\tIF CMD.plc.Start_A THEN state.Status := 1; END_IF\n\t\tIF NOT state.alarm.plc.alm_L AND NOT state.alarm.plc.alm_H THEN state.Status := 1; END_IF\n\t\tIF state.alarm.plc.alm_L AND NOT state.alarm.plc.alm_LL THEN state.Status := 2; END_IF\n\t\tIF state.alarm.plc.alm_H AND NOT state.alarm.plc.alm_HH THEN state.Status := 3; END_IF\n\t\tIF state.alarm.plc.alm_LL THEN state.Status := 4; END_IF\n\t\tIF state.alarm.plc.alm_HH THEN state.Status := 5; END_IF\n\t\tIF state.alarm.plc.alm_ST THEN state.Status := 6; END_IF\n\t\tIF NOT CMD.plc.Start_A THEN state.Status := 0; END_IF\n\tELSE\n\t\tstate.Status := 0;\n\tEND_IF\n\t\n//call timers\n\tFOR cnt := 0 TO 3 DO\n\t\tClock[0].SP := cfg.T_SP[cnt];\n\t\tdrv_Time_S (Clock[cnt]);\n\tEND_FOR","LineInfoPersistence":"(string)82f4b7bd-f2b2-4eef-baea-c27e76d0c6b6_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK drv_AI\nVAR_INPUT\n\tSignal\t\t\t:REAL;\t\t\t//Analog input signal from PLC\nEND_VAR\t\nVAR_IN_OUT\n\tCMD\t\t\t\t:uni_CMD;\t\t//Non-retain structure with command word\n\tcfg\t\t\t\t:AI_cfg;\t\t//Retain structure with settings\n\tstate\t\t\t:AI_state;\t\t//Non-retain structure with states information\nEND_VAR\nVAR_OUTPUT\n\tResult\t\t\t:REAL;\t\t\t//Signal from sensor\nEND_VAR\nVAR\n\tValue\t\t\t:REAL;\t\t\t//tmp value for calculating \n\tsupport\t\t\t:WORD;\t\t\t//internal command buffer\n\talm\t\t\t\t:ARRAY [0..3] OF BOOL;\t\t\t//support word for transfer alarms\n\tcnt\t\t\t\t:INT;\t\t\t//internal counter\n\tPT\t\t\t\t:ARRAY [0..1] OF R_TRIG;\n\tNT\t\t\t\t:ARRAY [0..1] OF F_TRIG;\n\tClock\t\t\t:ARRAY [0..3] OF Time_S;\n\tFilter\t\t\t:sub_Filter;\nEND_VAR\n","LineInfoPersistence":"(string)82f4b7bd-f2b2-4eef-baea-c27e76d0c6b6_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)359","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}