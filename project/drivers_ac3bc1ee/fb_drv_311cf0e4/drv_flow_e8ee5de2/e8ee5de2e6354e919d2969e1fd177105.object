{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)e8ee5de2-e635-4e91-9d29-69e1fd177105","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)drv_Flow","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)311cf0e4-1406-4bce-b577-8e3b742501ef"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//FLOWMETER\n//control of typical flowmeter control\n// - value of source product\n// - flowspeed\n// - statistics\n// - etc\n\n//global commands\n\t//auto mode\n\t\tIF sys.All_Auto THEN\n\t\t\tCMD.plc.Manual := FALSE;\n\t\tEND_IF;\n\t//global reset\n\t\tIF sys.All_Reset THEN\n\t\t\tCMD.plc.Reset := TRUE;\n\t\tEND_IF\n\t\t\n//device control\n\tCMD.plc.Start_A := Start;\n\tdrv_CMD(Emergency := support.0,\n\t\t\tCMD := CMD);\n\t//manual mode flag\n\t\tIF CMD.plc.Manual THEN sys.man.plc.xFE := TRUE; END_IF;\n\t//reset counter\n\t\tPT[1](CLK := CMD.plc.Start_M);\n\t\tIF PT[1].Q THEN\n\t\t\tstate.Last_AP := state.AP;\n\t\t\tstate.AP := 0.0;\n\t\tEND_IF\n\n//impulse mode\n\tPT[0](CLK := Signal_DI);\n\tIF cfg.cfg.plc.use_DI AND NOT cfg.cfg.plc.use_FM THEN\n\t\tIF NOT cfg.cfg.plc.use_POU THEN\n\t\t\t//time reset\n\t\t\tIF PT[0].Q THEN\n\t\t\t\tClock[0].CMD.plc.Reset := TRUE;\n\t\t\t\tAP := Clock[0].AP;\n\t\t\tEND_IF \n\t\t\t//time control\n\t\t\tClock[0].CMD.plc.Start := CMD.plc.Start_M;\n\t\tELSE\n\t\t\tIF NOT PT[0].Q THEN\n\t\t\t\tAP_POU := AP_POU + cfg.Clock;\n\t\t\t\tAP := AP_POU;\n\t\t\tELSE\n\t\t\t\tAP_POU := 0;\n\t\t\tEND_IF\n\t\tEND_IF\n\tELSE\n\t\tClock[0].CMD.plc.Start := FALSE;\n\tEND_IF\n\t\n//signal's filter\n\tIF cfg.cfg.plc.use_DI THEN\n\t\t//discrete input filtering\n\t\tIF PT[0].Q THEN\n\t\t\tFilter(\n\t\t\t\tStart := CMD.plc.Start_M,\n\t\t\t\tSignal := AP,\n\t\t\t\tFilter_Type := 0,\n\t\t\t\tFilter_Lim := cfg.Filter_Lim,\n\t\t\t\tResult => Result);\n\t\tEND_IF\n\tELSE\n\t\t//analog input filtering\n\t\tFilter(\n\t\t\tStart := CMD.plc.Start_M AND cfg.cfg.plc.use_Filter,\n\t\t\tSignal := Signal_AI,\n\t\t\tFilter_Type := cfg.Filter_Type,\n\t\t\tFilter_Lim := cfg.Filter_Lim,\n\t\t\tResult => Result);\n\t\tIF NOT cfg.cfg.plc.use_Filter THEN\n\t\t\tResult := Value;\n\t\tEND_IF\n\tEND_IF\n\n//weight mode\n\tIF  cfg.cfg.plc.use_FM THEN\n\t\tIF NOT support.2 AND CMD.plc.Start_M THEN\n\t\t\tSW := Signal_AI;\n\t\t\tsupport.2 := TRUE;\n\t\tEND_IF\n\t\tIF support.2 THEN\n\t\t\tIF NOT cfg.cfg.plc.use_FM_Add THEN\n\t\t\t\tAP := SW - Signal_AI;\n\t\t\tELSE\n\t\t\t\tAP := Signal_AI - SW;\n\t\t\tEND_IF\n\t\tEND_IF\n\tEND_IF\n\t\n//state signal transfer\n\tstate.Result := Result;\n\t\n//summary flow control\n\tIF CMD.plc.Start_M THEN\n\t\t//flow actual calculating\n\t\tIF cfg.cfg.plc.use_DI THEN\n\t\t\t//for DI\n\t\t\tstate.AP := state.AP + cfg.Wieght;\n\t\tELSIF NOT cfg.cfg.plc.use_FM THEN\n\t\t\t//for AI\n\t\t\tIF sys.pulse_01s THEN\n\t\t\t\tCASE cfg.Size_Time OF\n\t\t\t\t\t0:\tstate.AP := state.AP + Result / 3600 / 10;\n\t\t\t\t\t1:\tstate.AP := state.AP + Result / 60 / 10;\n\t\t\t\t\t2:\tstate.AP := state.AP + Result / 10;\n\t\t\t\tEND_CASE \n\t\t\tEND_IF \n\t\tEND_IF \n\t\t//pre-setpoint control\n\t\tIF state.AP >= cfg.PreSP THEN\n\t\t\tstate.state.plc.Pos_Ok := TRUE;\n\t\tEND_IF\n\t\t//setpoint control\n\t\tIF (state.AP >= (cfg.SP - cfg.DB)) THEN\n\t\t\tstate.state.plc.Done := TRUE;\n\t\tEND_IF\n\tEND_IF\n\t\n//deactivate control\n\tNT[0](CLK := CMD.plc.Start_M);\n\tIF NT[0].Q THEN\n\t\tstate.state.plc.Pos_Ok := FALSE;\n\t\tstate.state.plc.Done := FALSE;\n\tEND_IF\n\t\n//global state\n\tIF CMD.plc.Start_M THEN\n\t\tstate.state.plc.xON := TRUE;\n\t\tstate.state.plc.xOFF := FALSE;\n\tELSE\n\t\tstate.state.plc.xON := FALSE;\n\t\tstate.state.plc.xOFF := TRUE;\n\tEND_IF\n\t\n//HMI light\n\tIF cfg.cfg.plc.use_Light THEN\n\t\tIF CMD.plc.Start_M AND NOT state.state.plc.Pos_Ok THEN state.Status := 3; END_IF\n\t\tIF CMD.plc.Start_M AND state.state.plc.Pos_Ok AND NOT state.state.plc.Done THEN state.Status := 2; END_IF\n\t\tIF state.state.plc.Done THEN state.Status := 1; END_IF\n\t\tIF NOT CMD.plc.Start_M THEN state.Status := 0; END_IF\n\tELSE\n\t\tstate.Status := 0;\n\tEND_IF\n\t\n//data transfer\n\tPreDone := state.state.plc.Pos_Ok;\n\tDone := state.state.plc.Done;\n\t\n//reset\n\tIF CMD.plc.Reset THEN\n\t\tstate.state.plc.Alarm := FALSE;\n\t\tCMD.plc.Alarm := FALSE;\n\t\tCMD.plc.Reset := FALSE;\n\tEND_IF\n\t\n//call timers\n\tFOR cnt := 0 TO 1 DO\n\t\tdrv_Time_X (Clock[cnt]);\n\tEND_FOR","LineInfoPersistence":"(string)e8ee5de2-e635-4e91-9d29-69e1fd177105_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK drv_Flow\nVAR_INPUT\n\tStart\t\t\t:BOOL;\t\t\t//Start flow control\n\tSignal_DI\t\t:BOOL;\t\t\t//Discrete impulse from flowmeter\n\tSignal_AI\t\t:REAL;\t\t\t//Analog data from flowmeter\nEND_VAR\t\nVAR_IN_OUT\n\tCMD\t\t\t\t:uni_CMD;\t\t//Non-retain structure with command word\n\tcfg\t\t\t\t:FE_cfg;\t\t//Retain structure with settings\n\tstate\t\t\t:FE_state;\t\t//Non-retain structure with states information\nEND_VAR\nVAR_OUTPUT\n\tPreDone\t\t\t:BOOL;\t\t\t//PreSP reached\n\tDone\t\t\t:BOOL;\t\t\t//SP reached\n\tResult\t\t\t:REAL;\t\t\t//Signal from flowmeter\nEND_VAR\nVAR\n\tAP\t\t\t\t:REAL;\t\t\t//Actual time for countimng\n\tAP_POU\t\t\t:REAL;\t\t\t//Last actual value for counting\n\tSW\t\t\t\t:REAL;\t\t\t//Start weight for control \n\tValue\t\t\t:REAL;\t\t\t//tmp value for calculating \n\tsupport\t\t\t:WORD;\t\t\t//internal command buffer\n\tcnt\t\t\t\t:INT;\t\t\t//internal counter\n\tPT\t\t\t\t:ARRAY [0..1] OF R_TRIG;\n\tNT\t\t\t\t:ARRAY [0..1] OF F_TRIG;\n\tClock\t\t\t:ARRAY [0..1] OF Time_X;\n\tFilter\t\t\t:sub_Filter;\nEND_VAR\n","LineInfoPersistence":"(string)e8ee5de2-e635-4e91-9d29-69e1fd177105_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)945","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}